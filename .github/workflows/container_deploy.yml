on:
  workflow_dispatch:
    inputs:
      action:
        type: choice
        description: 'Action to execute'     
        required: true
        default: deploy
        options: 
        - deploy
        - destroy
name: Azure Containers
jobs:
  terraform:
    name: Terraform ${{ github.event.inputs.action }}
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
    runs-on: ubuntu-latest
 
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: "./containers"
 
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Python 3.9
      uses: actions/setup-python@v1
      with:
        python-version: 3.9

    - name: Test security with Checkov
      id: checkov
      uses: bridgecrewio/checkov-action@master
      with:
        directory: "./containers"
        framework: terraform
        # skip_check: CKV_AZURE_35,CKV_AZURE_33,CKV_AZURE_56,CKV2_AZURE_18,CKV2_AZURE_1
        quiet: true
 
    - uses: hashicorp/setup-terraform@v1
    - name: Terraform fmt
      run: terraform fmt -check

    - name: Terraform Init
      run: terraform init -backend-config=./backends/backend.tfbackend 

    - name: Terraform Validate
      run: terraform validate -no-color

    - name: Terraform Plan
      run: terraform plan -no-color --var-file ./vars/vars.tfvars

    - name: Terraform Apply
      if: ${{ github.event.inputs.action == 'deploy' }}
      run: terraform apply -auto-approve -input=false --var-file ./vars/vars.tfvars

    - name: Terraform Destroy
      if: ${{ github.event.inputs.action == 'destroy' }}
      run: terraform apply -destroy -auto-approve -input=false --var-file ./vars/vars.tfvars